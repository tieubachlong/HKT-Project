/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on Oct 2, 2014, 11:14:01 AM
 */
package hkt.project;

import java.awt.CardLayout;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.jimmc.jshortcut.JShellLink;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.SwingWorker;
import javax.swing.UIDefaults;
import javax.swing.UIManager;

/**
 *
 * @author longnt
 */
public class Main extends javax.swing.JFrame {

    /** Creates new form Main */
    private ImageIcon icon = null;
    private Image image = null;
    private String path = "C:\\";
    private PanelSystem system;
    private PanelAccept pAccept;
    private PanelStart pStart;
    private PanelInformationAdmin informationAdmin;

    public Main() {
        initComponents();
        setLocationRelativeTo(this);
        jPanel1.setSize(500, 350);
        URL url = getClass().getResource("saleperson1.png");
        image = Toolkit.getDefaultToolkit().getImage(url);
        icon = new ImageIcon(image);
        lblSalePerson.setIcon(icon);

        ImageIcon icon = new ImageIcon(getClass().getResource("icon.png"));
        Image im = icon.getImage();
        setIconImage(im);

        pStart = new PanelStart();
        PanelRefuse pRefuse = new PanelRefuse();
        pAccept = new PanelAccept();
        PanelInstallComplete pInstallComplete = new PanelInstallComplete();
        system = new PanelSystem();
        informationAdmin = new PanelInformationAdmin();
        jPanel1.add(pStart, "pStart");
        jPanel1.add(pRefuse, "pRefuse");
        jPanel1.add(pAccept, "pAccept");
        jPanel1.add(pInstallComplete, "installComplete");
        jPanel1.add(system, "system");
        jPanel1.add(informationAdmin, "informationAdmin");

        btnBack.setVisible(false);
        btnCance.addMouseListener(new MouseEventClickButton("iconBackExit.png", "iconBackExit.png", "iconBackExit.png"));
        btnBack.addMouseListener(new MouseEventClickButton("iconBack.png", "iconBack.png", "iconBack.png"));
        btnOk.addMouseListener(new MouseEventClickButton("iconOk1.png", "iconOk1.png", "iconOk1.png"));
        addWindowListener(new WindowAdapter() {

            @Override
            public void windowOpened(WindowEvent e) {
                pStart.getjScrollPane1().getVerticalScrollBar().setValue(0);
            }
        });
        addKeyBindings(jPanel1);
        if (!readSetup().equals("")) {
            CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
            cardLayput.show(jPanel1, "installComplete");
            btnCance.setText("Kết thúc");
            btnOk.setText("Chạy phần mềm");
            btnBack.setVisible(false);
        }
        try {
            String str = getFile("DataBase", "").getAbsolutePath();
            zipFile(getFile("server/appHKT.zip"), str);
            String cmdarray[] = new String[]{"cmd", "/c", str + "\\appHKT\\HKT Software 4.0.exe"};

            Runtime.getRuntime().exec(cmdarray);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showButton(boolean flag) {
        btnOk.setEnabled(flag);
        btnCance.setEnabled(flag);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBackgroud1 = new hkt.project.PanelBackgroud();
        lblSalePerson = new javax.swing.JLabel();
        lblSupport = new javax.swing.JLabel();
        lblNameCpn = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        btnCance = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblNameCpn1 = new javax.swing.JLabel();
        lblNameCpn2 = new javax.swing.JLabel();
        lblNameCpn3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cài đặt phần mềm HKT");
        setResizable(false);

        panelBackgroud1.setPreferredSize(new java.awt.Dimension(519, 419));

        lblSupport.setText("<html><b>0437 925 193<br>0904 894 728<br></b></html>");
        lblSupport.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lblNameCpn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNameCpn.setForeground(new java.awt.Color(126, 0, 0));
        lblNameCpn.setText("Tư vấn hỗ trợ");
        lblNameCpn.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jPanel2.setBackground(new java.awt.Color(226, 237, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(435, 302));
        jPanel2.setMinimumSize(new java.awt.Dimension(435, 302));

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hkt/project/iconBack.png"))); // NOI18N
        btnBack.setText("Quay lại");
        btnBack.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnBack.setPreferredSize(new java.awt.Dimension(90, 35));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnOk.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hkt/project/iconOk1.png"))); // NOI18N
        btnOk.setText("Chấp nhận cam kết");
        btnOk.setBorderPainted(false);
        btnOk.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnOk.setPreferredSize(new java.awt.Dimension(135, 35));
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCance.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnCance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hkt/project/iconBackExit.png"))); // NOI18N
        btnCance.setText("Từ chối cam kết");
        btnCance.setBorderPainted(false);
        btnCance.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnCance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCanceActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(226, 237, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(435, 302));
        jPanel1.setMinimumSize(new java.awt.Dimension(435, 302));
        jPanel1.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 135, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCance, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCance, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnOk.getAccessibleContext().setAccessibleDescription("");

        lblNameCpn1.setFont(new java.awt.Font("Tahoma", 1, 12));
        lblNameCpn1.setForeground(new java.awt.Color(126, 0, 0));
        lblNameCpn1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNameCpn1.setText("Version 4.0");

        lblNameCpn2.setFont(new java.awt.Font("Tahoma", 1, 16));
        lblNameCpn2.setForeground(new java.awt.Color(255, 255, 255));
        lblNameCpn2.setText("Công ty CP Tư vấn Quản trị HKT");
        lblNameCpn2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        lblNameCpn3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        lblNameCpn3.setForeground(new java.awt.Color(126, 0, 0));
        lblNameCpn3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNameCpn3.setText("HKT Software");
        lblNameCpn3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hkt/project/Logo HKT.png"))); // NOI18N

        javax.swing.GroupLayout panelBackgroud1Layout = new javax.swing.GroupLayout(panelBackgroud1);
        panelBackgroud1.setLayout(panelBackgroud1Layout);
        panelBackgroud1Layout.setHorizontalGroup(
            panelBackgroud1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroud1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelBackgroud1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBackgroud1Layout.createSequentialGroup()
                        .addComponent(lblNameCpn3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160)
                        .addComponent(lblNameCpn2))
                    .addGroup(panelBackgroud1Layout.createSequentialGroup()
                        .addGroup(panelBackgroud1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSalePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNameCpn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelBackgroud1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblSupport, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addComponent(lblNameCpn1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        panelBackgroud1Layout.setVerticalGroup(
            panelBackgroud1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroud1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelBackgroud1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNameCpn3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameCpn2))
                .addGap(15, 15, 15)
                .addGroup(panelBackgroud1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBackgroud1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(lblSalePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(lblNameCpn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSupport, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNameCpn1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackgroud1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackgroud1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
    enter();

}//GEN-LAST:event_btnOkActionPerformed

private void btnCanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCanceActionPerformed

    if (btnCance.getText().equals("Từ chối cam kết")) {
        CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
        cardLayput.show(jPanel1, "pRefuse");
        btnCance.setText("Thoát");
        btnOk.setText("Tiếp tục cài đặt");
    } else if (btnCance.getText().equals("Thoát")
            || btnCance.getText().equals("Kết thúc")) {
        System.exit(0);
    } else if (btnCance.getText().equals("Hủy") && btnOk.getText().equals("Tiếp tục")) {
        CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
        cardLayput.show(jPanel1, "pRefuse");
        btnCance.setText("Thoát");
        btnOk.setText("Tiếp tục cài đặt");
        btnBack.setVisible(false);
    } else if (btnCance.getText().equals("Hủy") && !btnOk.getText().equals("Tiếp tục")) {
        System.exit(0);
    }


//    if (jButton1.getText().equals("Bỏ cài đặt")) {
//        CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
//        cardLayput.show(jPanel1, "pRefuse");
//        jButton1.setText("Tiếp tục cài đặt");
//        jButton2.setText("Thoát");
//    } else if (jButton1.getText().equals("Tiếp tục cài đặt")) {
//        CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
//        cardLayput.show(jPanel1, "pStart");
//        jButton2.setText("Chấp nhận");
//        jButton1.setText("Bỏ cài đặt");
//    } else if (jButton1.getText().equals("Tiếp tục")) {
//        CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
//        cardLayput.show(jPanel1, "installComplete");
//        jButton1.setText("Chạy phần mềm");
//        jButton2.setText("Kết thúc");
//        jButton3.setEnabled(false);
//
//    } else if (jButton1.getText().equals("Chạy phần mềm")) {
//        CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
//        cardLayput.show(jPanel1, "system");
//        jButton1.setText("OK");
//        jButton2.setText("Hủy");
//        jButton3.setVisible(false);
//    }else if (jButton1.getText().equals("OK")){
//        CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
//        cardLayput.show(jPanel1, "informationAdmin");
//        
//        jButton1.setText("Hủy");
//        jButton2.setText("OK");       
//    }

}//GEN-LAST:event_btnCanceActionPerformed

private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

    CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
    cardLayput.show(jPanel1, "pStart");
    btnOk.setText("Chấp nhận cam kết");
    btnCance.setText("Từ chối cam kết");
    btnBack.setVisible(false);
}//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    UIDefaults defaults = UIManager.getLookAndFeelDefaults();
//                    defaults.put("nimbusOrange", defaults.get("nimbusInfoBlue"));
                    break;
                }
            }

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCance;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblNameCpn;
    private javax.swing.JLabel lblNameCpn1;
    private javax.swing.JLabel lblNameCpn2;
    private javax.swing.JLabel lblNameCpn3;
    private javax.swing.JLabel lblSalePerson;
    private javax.swing.JLabel lblSupport;
    private hkt.project.PanelBackgroud panelBackgroud1;
    // End of variables declaration//GEN-END:variables

    private InputStream getFile(String str) {
        return getClass().getResourceAsStream(str);
    }

    public void next() {

        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {

            @Override
            protected Void doInBackground() throws Exception {
                btnBack.setEnabled(false);
                btnCance.setEnabled(false);
                btnOk.setEnabled(false);
                pAccept.showPro();
                pAccept.view(false);
                try {
                    Thread t = new Thread() {

                        @Override
                        public void run() {
                            for (int i = 10; i < 100;) {
                                if (pAccept.getProgressBar().getValue() < 100) {
                                    pAccept.getProgressBar().setValue(i);
                                    i = i + 10;
                                    try {
                                        sleep(1000);
                                    } catch (Exception e) {
                                    }
                                }
                            }
                        }
                    };
                    t.start();
                    path = pAccept.getPath();
                    String outputFolder = path + "\\HKT Software 4.0";
                    zipFile(getFile("server/server.zip"), outputFolder);
                    if (!readData().equals("database")) {
                        zipFile(getFile("server/mysql.zip"), getFile("DataBase", "").getAbsolutePath());
                    }
                    createDesktopShortcut();
                    pAccept.getProgressBar().setValue(100);
                    try {
                        Thread.sleep(2000);
                    } catch (Exception e) {
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                    e.printStackTrace();
                }
                return null;
            }

            @Override
            protected void done() {
                btnCance.setEnabled(true);
                btnOk.setEnabled(true);
                CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
                cardLayput.show(jPanel1, "installComplete");
                btnCance.setText("Kết thúc");
                btnOk.setText("Chạy phần mềm");
                btnBack.setVisible(false);
            }
        };
        worker.execute();

    }

    private String executeCommand(String command) {
        StringBuffer output = new StringBuffer();
        Process p;
        try {
            p = Runtime.getRuntime().exec(command);
            p.waitFor();
            BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));

            String line = "";
            while ((line = reader.readLine()) != null) {
                output.append(line + "\n");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return output.toString();
    }

    private void controlPanel() throws Exception {
//        String command = "";
//        command = "takeown /f \"C:\\Program Files\"";
//        Runtime.getRuntime().exec(command);
//        System.out.println("..  " + command);
//        String command1 = "icacls \"C:\\Program Files\" /grant Everyone:F";
//        Runtime.getRuntime().exec(command1);

        FileWriter fw = new java.io.FileWriter(getFile("DataBase", "HKT.reg"));
        String str6 = JShellLink.getDirectory("") + path;
        if (!str6.endsWith("//")) {
            str6 = str6 + "//";
        }

        String str0 = str6.replace("\\", "\\\\");
        String str1 = "\"" + str0 + "HKT Software 4.0\\\\server\\\\bin\\\\HKT Soft.exe\"\n";
        String str2 = "\"" + str0 + "HKT Software 4.0\"\n";
        String str3 = "\"\\\"" + str0 + "HKT Software 4.0\\\\Uninstall.exe\\\"\"\n";
        String vbs = "Windows Registry Editor Version 5.00 \n"
                + "\n"
                + "[" + getWin() + "] \n"
                + "\"DisplayName\"=\"HKT Software 4.0\"\n"
                + "\"DisplayIcon\"=" + str1
                + "\"InstallLocation\"=" + str2
                + "\"NoModify\"=dword:00000001\n"
                + "\"UninstallString\"=" + str3;
        fw.write(vbs);
        fw.close();

        File file = File.createTempFile("realhowto", ".vbs");
        file.deleteOnExit();
        FileWriter fw1 = new java.io.FileWriter(file);
        String str = getFile("Database", "HKT.reg").getAbsolutePath();
        String vbs1 = "Set WshShell = CreateObject(\"WScript.Shell\") \n"
                + "WshShell.Run " + "\"regedit /S " + str + "\"" + "\n"
                + "Set WshShell = Nothing";

        fw1.write(vbs1);
        fw1.close();
        Runtime.getRuntime().exec("cscript //NoLogo " + file.getPath());
    }

    public void createDesktopShortcut() {

        try {

            JShellLink link = new JShellLink();
            String pa = JShellLink.getDirectory("") + path;
            String filePath = pa + "\\HKT Software 4.0\\server\\bin\\HKT Soft.exe";
            String str = pa + "\\HKT Software 4.0\\server\\bin\\service.exe";
            link.setFolder(JShellLink.getDirectory("desktop"));

            link.setName("HKT Software 4.0");

            link.setPath(filePath);

            link.save();

            FileWriter fw = new java.io.FileWriter(getFile("DataBase", "server.vbs"));

            String vbs = "Set WshShell = CreateObject(\"WScript.Shell\") \n"
                    + "WshShell.Run chr(34) & " + "\"" + str + "\"" + " & Chr(34), 0 \n"
                    + "Set WshShell = Nothing";
            fw.write(vbs);
            fw.close();

            FileWriter fw111 = new java.io.FileWriter(new File(
                    pa + "\\HKT Software 4.0\\server\\Uninstall.bat"));

            String vbs111 = "reg delete \"" + getWin() + "\" /f";

            fw111.write(vbs111);
            fw111.close();


//            String str1 = pa + "\\HKT Software 4.0\\server\\bin\\pos.bat";
//            FileWriter fw1 = new java.io.FileWriter(new File(pa + "\\HKT Software 4.0\\server\\bin\\server.vbs"));
//
//            String vbs1 = "Set WshShell = CreateObject(\"WScript.Shell\") \n"
//                    + "WshShell.Run chr(34) & " + "\"" + str1 + "\"" + " & Chr(34), 0 \n"
//                    + "Set WshShell = Nothing";
//            fw1.write(vbs1);
//            fw1.close();
            String str2 = pa + "\\HKT Software 4.0\\server\\bin\\webserver.bat";
            System.out.println("str2 " + str2);
            FileWriter fw2 = new java.io.FileWriter(new File(pa + "\\HKT Software 4.0\\server\\bin\\webserver.vbs"));

            String vbs2 = "Set WshShell = CreateObject(\"WScript.Shell\") \n"
                    + "WshShell.Run chr(34) & " + "\"" + str2 + "\"" + " & Chr(34), 0 \n"
                    + "Set WshShell = Nothing";
            fw2.write(vbs2);
            fw2.close();

            String str3 = JShellLink.getDirectory("") + getFile("DataBase", "").getAbsolutePath() + "\\mysql\\bin\\mysqld.exe";
            FileWriter fw3 = new java.io.FileWriter(getFile("DataBase", "mysql.vbs"));

            String vbs3 = "Set WshShell = CreateObject(\"WScript.Shell\") \n"
                    + "WshShell.Run chr(34) & " + "\"" + str3 + "\"" + " & Chr(34), 0 \n"
                    + "Set WshShell = Nothing";
            fw3.write(vbs3);
            fw3.close();
            writeData();
            writeData(pa + "\\HKT Software 4.0", "setup");
            controlPanel();
            String s1 = pa + "\\HKT Software 4.0\\server\\bin\\Uninstall.exe";
            String s2 = pa + "\\HKT Software 4.0";
            String cmdarray[] = new String[]{"cmd", "/c", "move", s1, s2};

            Runtime.getRuntime().exec(cmdarray);
            copySoft();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            ex.printStackTrace();
        }

    }

    private void copySoft() {
        JShellLink link = new JShellLink();
        String filePath = JShellLink.getDirectory("") + path + "\\HKT Software 4.0\\server\\bin\\HKT Soft.exe";
        File f = new File(defaultDirectory() + File.separator + "\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\HKT Software 4.0");
        f.mkdir();
        link.setFolder(f.getPath());

        link.setName("HKT Software 4.0");

        link.setPath(filePath);

        link.save();

        String filePath1 = JShellLink.getDirectory("") + path + "\\HKT Software 4.0\\Uninstall.exe";
        link.setName("Uninstall");

        link.setPath(filePath1);

        link.save();
    }

    private String getWin() {
        try {
            File f = new File(JShellLink.getDirectory("") + path + "\\HKT Software 4.0\\server\\bin\\Win.vbs");
            Process p = Runtime.getRuntime().exec("cscript //NoLogo " + f.getPath());
            String sn = "";
            BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));
            String line;
            while ((line = input.readLine()) != null) {
                sn = sn + line;
            }
            input.close();
            if (sn.equals("64")) {
                return "HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\HKT Software 4.0";
            } else {
                return "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\HKT Software 4.0";
            }
        } catch (Exception e) {
            return "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\HKT Software 4.0";
        }

    }

    private void writeData() {
        try {
            FileOutputStream fi = new FileOutputStream(getFile("Database", "data"));
            ObjectOutputStream of = new ObjectOutputStream(fi);
            String str = "database";
            of.writeObject(str);
            of.reset();
            of.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private String readData() {
        try {
            FileInputStream fi = new FileInputStream(getFile("Database", "data").getAbsoluteFile());
            ObjectInputStream of = new ObjectInputStream(fi);
            String str = of.readObject().toString();
            of.close();
            return str;
        } catch (Exception e) {
            return "";

        }

    }

    private String readSetup() {
        try {
            FileInputStream fi = new FileInputStream(getFile("Database", "setup").getAbsoluteFile());
            ObjectInputStream of = new ObjectInputStream(fi);
            String str = of.readObject().toString();
            of.close();
            return str;
        } catch (Exception e) {
            return "";

        }

    }

    public File getFile(String module, String nameFile) {
        String directory = defaultDirectory() + File.separator
                + "HKTSoftwareEnterpriseManager" + File.separator + module;
        if (!new File(directory).exists()) {
            new File(directory).mkdirs();
        }
        String path = directory + File.separator + nameFile;;
        return new File(path);
    }

    private String defaultDirectory() {
        String OS = System.getProperty("os.name").toUpperCase();
        if (OS.contains("WIN")) {
            return System.getProperty("user.home");
        } else if (OS.contains("MAC")) {
            return System.getProperty("user.home") + "/Library/Application "
                    + "Support";
        } else if (OS.contains("NUX")) {
            return System.getProperty("user.home");
        }
        return System.getProperty("user.dir");
    }

    private void zipFile(InputStream zipFile, String outputFolder) throws FileNotFoundException, IOException {
        ZipInputStream zis = new ZipInputStream(zipFile);
        ZipEntry ze = zis.getNextEntry();
        while (ze != null) {
            String entryName = ze.getName();
            System.out.print("Extracting " + entryName + " -> " + outputFolder + File.separator + entryName + "...");
            File f = new File(outputFolder + File.separator + entryName);
            //create all folder needed to store in correct relative path.
            f.getParentFile().mkdirs();
            FileOutputStream fos = new FileOutputStream(f);
            int len;
            byte buffer[] = new byte[1024];
            while ((len = zis.read(buffer)) > 0) {
                fos.write(buffer, 0, len);
            }
            fos.close();
            System.out.println("OK!");
            ze = zis.getNextEntry();
        }
        zis.closeEntry();
        zis.close();

        System.out.println(zipFile + " unzipped successfully");
    }

    public void next1() {
        try {
            String str = "http://" + system.getTxtSource().getText() + ":7080/rest";
            writeData(str, "rest");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
        }
    }

    public boolean next2() {
        try {
            if (informationAdmin.check()) {
                String str = informationAdmin.getTxtUserAdmin().getText() + "/" + informationAdmin.getPassAdmin().getText();
                writeData(str, "admin");
                return true;
            }else{
                return false;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
        }
        return true;
    }

    private void writeData(String str, String data) {
        try {
            FileOutputStream fi = new FileOutputStream(getFile("Database", data));
            ObjectOutputStream of = new ObjectOutputStream(fi);
            of.writeObject(str);
            of.reset();
            of.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void addKeyBindings(JComponent jc) {

        jc.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), "Enter");
        jc.getActionMap().put("Enter", new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                enter();
            }
        });
    }

    private void enter() {
        if (btnOk.getText().equals("Chấp nhận cam kết")) {
            CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
            cardLayput.show(jPanel1, "pAccept");
            btnCance.setText("Hủy");
            btnOk.setText("Tiếp tục");
            btnBack.setVisible(true);

        } else if (btnOk.getText().equals("Tiếp tục cài đặt")) {
            CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
            cardLayput.show(jPanel1, "pStart");
            pStart.getjScrollPane1().getVerticalScrollBar().setValue(0);
            btnOk.setText("Chấp nhận cam kết");
            btnCance.setText("Từ chối cam kết");
        } else if (btnOk.getText().equals("Tiếp tục")) {

            next();
        } else if (btnOk.getText().equals("Chạy phần mềm")) {
            CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
            cardLayput.show(jPanel1, "system");
            btnCance.setText("Hủy");
            btnOk.setText("OK");
            btnBack.setVisible(false);
        } else if (btnOk.getText().equals("OK")) {
            next1();
           // if (readData("admin").trim().isEmpty()) {
                CardLayout cardLayput = (CardLayout) jPanel1.getLayout();
                cardLayput.show(jPanel1, "informationAdmin");
                btnCance.setText("Hủy");
                btnOk.setText("Xác nhận");
//            } else {
//                runSoft();
//                System.exit(0);
//
//            }
        } else if (btnOk.getText().equals("Xác nhận")) {
            if (next2()) {
                runSoft();
                System.exit(0);
            }

        }

    }

    private void runSoft() {
        try {
            String filePath = JShellLink.getDirectory("") + path + "\\HKT Software 4.0\\server\\bin\\HKT Soft.exe";
            File file = new File(filePath);

            String cmdarray[] = new String[]{"cmd", "/c", file.getAbsolutePath()};

            Runtime.getRuntime().exec(cmdarray);
        } catch (Exception e2) {
            e2.printStackTrace();
        }
    }

    private String readData(String data) {
        try {
            FileInputStream fi = new FileInputStream(getFile("Database", data));
            ObjectInputStream of = new ObjectInputStream(fi);
            String str = of.readObject().toString();
            of.close();
            return str;
        } catch (Exception e) {
            return "";
        }
    }
}
